Декоратор — это структурный паттерн проектирования, который позволяет динамически добавлять объектам новую функциональность,
оборачивая их в полезные «обёртки».

Принцип паттернф Декоратор -  Это когда один объект содержит ссылку на другой и делегирует ему работу,
вместо того чтобы самому наследовать его поведение.

Аналогия из жизни: Любая одежда — это аналог Декоратора. Применяя Декоратор, вы не меняете первоначальный класс
и не создаёте дочерних классов. Так и с одеждой — надевая свитер, вы не перестаёте быть собой,
но получаете новое свойство — защиту от холода. Вы можете пойти дальше и надеть сверху ещё один декоратор — плащ,
чтобы защититься и от дождя.

* Всё что является Аннотацией, является декоратором ( @Test, @BeforeMethod и т.д )
Декоратор модифицирует внешнюю логику метода, а не внутренюю

Применимость
 Когда вам нужно добавлять обязанности объектам на лету, незаметно для кода, который их использует.
 Когда нельзя расширить обязанности объекта с помощью наследования.